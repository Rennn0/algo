@using Mobile.Source
@inject IPreferences Preferences
@inject NavigationManager NavigationManager
@inject SharedState SharedState
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand">Gilgamesh</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (m_isMe)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Check-Ins
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="auth">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Auth
                </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="booking">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Booking
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="my-bookings">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> MyBookings
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <button @onclick="Logout" class="nav-link btn btn-link text-start">
                <span class="bi bi-arrow-left-square-nav-menu" aria-hidden="true"></span> Logout
            </button>
        </div>
    </nav>
</div>

@code
{
    private bool m_isMe ;

    protected override void OnInitialized()
    {
        m_isMe = SharedState.IsMe;
        SharedState.AuthStateChanged += SharedStateOnAuthStateChanged;;
    }

    private void SharedStateOnAuthStateChanged()
    {
        Update();
        StateHasChanged();
    }

    private void Update()
    {
        m_isMe = SharedState.IsMe;
    }

    private void Logout()
    {
        Preferences.Remove("Username");
        SharedState.SetIsMe();
        NavigationManager.NavigateTo("/auth");
    }

    public void Dispose()
    {
        SharedState.AuthStateChanged -= SharedStateOnAuthStateChanged;
    }
}
