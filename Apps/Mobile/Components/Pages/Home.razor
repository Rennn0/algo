@page "/"
@inject HttpClient Http
@implements IDisposable


@if (m_isLoading)
{
    <p>Loading ...</p>
}else if (m_exception is not null)
{
    <p class="text-danger">Error: @m_exception.Message</p>

}
else if (m_checkins is not null)
{
    <div class="grid-container">
        @foreach (string checkin in m_checkins)
        {
            <div class="grid-item">@checkin</div>
        }
    </div>
}

@code
{
    private bool m_isLoading = false;
    private string[]? m_checkins = null;

    private System.Threading.Timer? m_timer = null;
    private Exception? m_exception = null;
    
    string Text { get; set; } = "????";
    string ButtonText { get; set; } = "Click Me";
    int ClickCount { get; set; }

    void ButtonOnClick()
    {
        ClickCount += 1;
        Text = $"Awesome x {ClickCount}";
        ButtonText = "Click Me Again";
    }

    protected override async Task OnInitializedAsync()
    {
        await FetchCheckIns();

        m_timer = new Timer(async void (_) =>
        {
            try
            {
                await InvokeAsync(FetchCheckIns);
            }
            catch (Exception e)
            {
                m_exception = e;
            }
        }, null, TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(10));
    }

    private async Task FetchCheckIns()
    {
        try
        {
            m_isLoading = true;
            StateHasChanged();

            int offset = (int)DateTimeOffset.Now.Offset.TotalMinutes ;
            m_checkins = await Http.GetFromJsonAsync<string[]>($"Api/CheckIns?offsetMinutes={offset}");
        }
        catch (Exception e)
        {
            m_exception = e;
        }
        finally
        {
            m_isLoading = false;
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        m_timer?.Dispose();
    }
}

<style>
    .grid-container {
        display: grid;
        grid-template-columns: 1fr;
        gap: 10px;
        padding: 10px;
    }

    .grid-item {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
        border-radius: 4px;
        background-color: #f9f9f9;
    }
</style>